{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/components/page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\"; // import {client} from '../index'\n\nimport { useQuery } from '@apollo/client';\nimport { FETCH_FIRST_PAGE } from '../gql/query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchResult() {\n  _s();\n\n  const [allPages, setAllPages] = useState([{\n    pagenum: 0,\n    content: \"\"\n  }]);\n  const [pageDetails, setPageDetails] = useState({\n    pagenum: 0,\n    content: \"\"\n  });\n  const location = useLocation();\n  const query = new URLSearchParams(location.search).get(\"read\");\n  const [title, setTitle] = useState(query);\n  const [bookId, setBookId] = useState(0);\n  const [currPage, setCurrPage] = useState(0);\n  useEffect(() => {\n    if (title === \"Harry Potter\") {\n      setTitle(title);\n      setBookId(1);\n    } else if (title === \"Brisingr\") {\n      setTitle(title);\n      setBookId(2);\n    }\n  }, [title]); // useQuery will send query to backend through uri link and get the data\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_FIRST_PAGE, {\n    variables: {\n      id: bookId\n    }\n  }); // body in useEffect will run after page is rendered. \n\n  useEffect(() => {\n    if (data) {\n      setAllPages(data.bookById.pagesByBookId.nodes);\n      setPageDetails(data.bookById.pagesByBookId.nodes[0]);\n      console.log(data.bookById.pagesByBookId.nodes[0]);\n    }\n  }, [data]);\n  if (loading) console.log('Loading...');\n  if (error) console.log(`Error! ${error.message}`);\n\n  function getNextPage() {\n    if (currPage + 2 <= allPages.length) {\n      setPageDetails(allPages[currPage + 1]);\n      setCurrPage(currPage + 1);\n    }\n  }\n\n  function getPrevPage() {\n    if (currPage - 1 >= 0) {\n      setPageDetails(allPages[currPage - 1]);\n      setCurrPage(currPage - 1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"contents\",\n      children: pageDetails.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"pagenum-inpage\",\n      children: pageDetails.pagenum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"circleBackButton\",\n      onClick: getPrevPage,\n      children: \"back page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"circleForwardButton\",\n      onClick: getNextPage,\n      children: \"next page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchResult, \"EPmJUQCuddjwqF2obT0y/AUOKVI=\", false, function () {\n  return [useLocation, useQuery];\n});\n\n_c = SearchResult;\nexport default SearchResult; // body in useEffect will run after page is rendered. \n// useEffect(() => {\n//   // invalid url will trigger an 404 error\n//   const { search } = window.location;\n//   const query = new URLSearchParams(search).get('book');\n//   fetch(\"/getpage\", {\n//     method:\"POST\",\n//     headers: {\"Content-Type\": \"application/json\" },\n//     body: JSON.stringify(query)\n//   }).then(res => res.json()\n//   ).then(\n//     pageDetails => {\n//       setData(pageDetails)\n//       // console.log(pageDetails)\n//     }\n//   )\n// }, []);\n// function getNextPage() {\n//   fetch(\"/nextpage\", {\n//     method:\"POST\",\n//     headers: {\"Content-Type\": \"application/json\" },\n//     body: JSON.stringify(currPage+1)\n//   }).then(res => res.json()\n//   ).then(\n//     pageDetails => {\n//       setData(pageDetails)\n//       // console.log(pageDetails)\n//     }\n//   );\n//   setCurrPage(currPage + 1);\n// };\n// function getPrevPage() {\n//   fetch(\"/nextpage\", {\n//     method:\"POST\",\n//     headers: {\"Content-Type\": \"application/json\" },\n//     body: JSON.stringify(currPage-1)\n//   }).then(res => res.json()\n//   ).then(\n//     pageDetails => {\n//       setData(pageDetails)\n//       // console.log(pageDetails)\n//     }\n//   );\n//   setCurrPage(currPage - 1);\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useQuery","FETCH_FIRST_PAGE","SearchResult","allPages","setAllPages","pagenum","content","pageDetails","setPageDetails","location","query","URLSearchParams","search","get","title","setTitle","bookId","setBookId","currPage","setCurrPage","loading","error","data","variables","id","bookById","pagesByBookId","nodes","console","log","message","getNextPage","length","getPrevPage"],"sources":["/Users/cajoshuapark/flask/client/src/components/page.tsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { useLocation } from \"react-router-dom\";\n// import {client} from '../index'\nimport { useQuery } from '@apollo/client';\nimport { FETCH_FIRST_PAGE } from '../gql/query';\n\n\nfunction SearchResult () {\n    const [allPages, setAllPages] = useState([{ pagenum:0,content:\"\" }]);\n    const [pageDetails, setPageDetails] = useState({ pagenum:0,content:\"\" });\n    const location = useLocation();\n    const query = new URLSearchParams(location.search).get(\"read\");\n    const [title, setTitle] = useState(query);\n    const [bookId, setBookId] = useState(0);\n    const [currPage, setCurrPage] = useState(0);\n\n    useEffect(() => {\n        if(title === \"Harry Potter\"){\n            setTitle(title);\n            setBookId(1);\n        }else if(title === \"Brisingr\"){\n            setTitle(title);\n            setBookId(2);\n        }\n    }, [title]);\n\n    // useQuery will send query to backend through uri link and get the data\n    const {  loading, error, data }  = useQuery(\n        FETCH_FIRST_PAGE,{ variables: { id: bookId }}\n    );\n    // body in useEffect will run after page is rendered. \n    useEffect(() => {\n        if(data){\n            setAllPages(data.bookById.pagesByBookId.nodes);\n            setPageDetails(data.bookById.pagesByBookId.nodes[0]);\n            console.log(data.bookById.pagesByBookId.nodes[0]);\n        }\n    }, [data]);\n    if (loading) console.log('Loading...');\n    if (error) console.log(`Error! ${error.message}`);\n\n    function getNextPage() {\n        if(currPage + 2 <= allPages.length){\n            setPageDetails(allPages[currPage+1]);\n            setCurrPage(currPage + 1);\n        }\n    }\n\n    function getPrevPage() {\n        if(currPage -1 >= 0){\n            setPageDetails(allPages[currPage-1]);\n            setCurrPage(currPage - 1);\n        }\n    }\n    return (\n        <div className=\"page\">\n            <h1 className = \"title\">{title}</h1>\n            <h2 className =\"contents\">{pageDetails.content}</h2>\n            <h2 className =\"pagenum-inpage\">{pageDetails.pagenum}</h2>\n            <button className = \"circleBackButton\" onClick={getPrevPage}>\n              back page\n            </button>\n            <button className = \"circleForwardButton\" onClick={getNextPage}>\n              next page\n            </button>\n        </div>\n    )\n}\n\nexport default SearchResult;\n\n\n\n\n\n  // body in useEffect will run after page is rendered. \n  // useEffect(() => {\n  //   // invalid url will trigger an 404 error\n  //   const { search } = window.location;\n  //   const query = new URLSearchParams(search).get('book');\n  //   fetch(\"/getpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(query)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   )\n  // }, []);\n\n  // function getNextPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage+1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage + 1);\n  // };\n  // function getPrevPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage-1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage - 1);\n  // }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}