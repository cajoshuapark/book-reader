{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/components/searchBook.tsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  let history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  useEffect(() => {\n    // redirect to a different path which is urlSearchParam compatible\n    // this is done so that infinite rendering does not occur with the useEffect hook\n    function handleClick(title) {\n      history.push(`/page?read=${title}`);\n    }\n\n    ;\n\n    if (title) {\n      setTitle(title);\n      handleClick(title);\n    }\n  }, [setTitle, title, history]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"/\",\n    method: \"get\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => {\n        setTitle(e.target.value);\n      },\n      type: \"text\",\n      placeholder: \"Search books\",\n      name: \"book\",\n      className: \"topInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search\",\n      onClick: true,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"yqXJnRlRsUX/tY/42NCK0gXgkQI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Search;\n;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useHistory","React","useState","useEffect","Search","history","title","setTitle","handleClick","push","e","target","value"],"sources":["/Users/cajoshuapark/flask/client/src/components/searchBook.tsx"],"sourcesContent":["import { useHistory,useLocation } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\n\nfunction Search () {\n    let history = useHistory();\n    const [title, setTitle] = useState(\"\");\n    useEffect(() => {\n        // redirect to a different path which is urlSearchParam compatible\n        // this is done so that infinite rendering does not occur with the useEffect hook\n          function handleClick(title: String) {\n            history.push(`/page?read=${title}`);\n          };\n          if(title){\n            setTitle(title);\n            handleClick(title);\n          }\n        },[setTitle, title, history]);\n\n    return (\n        <form action=\"/\" method=\"get\">\n        <input\n            onChange={(e) => {\n                setTitle(e.target.value)\n            }}\n            type=\"text\"\n            placeholder=\"Search books\"\n            name=\"book\"\n            className=\"topInput\"\n        />\n        <button \n            className = \"search\"\n            onClick\n        >Search\n        </button>\n    </form>\n    )\n};\nexport default Search;\n"],"mappings":";;;AAAA,SAASA,UAAT,QAAuC,kBAAvC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,MAAT,GAAmB;EAAA;;EACf,IAAIC,OAAO,GAAGL,UAAU,EAAxB;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACAC,SAAS,CAAC,MAAM;IACZ;IACA;IACE,SAASK,WAAT,CAAqBF,KAArB,EAAoC;MAClCD,OAAO,CAACI,IAAR,CAAc,cAAaH,KAAM,EAAjC;IACD;;IAAA;;IACD,IAAGA,KAAH,EAAS;MACPC,QAAQ,CAACD,KAAD,CAAR;MACAE,WAAW,CAACF,KAAD,CAAX;IACD;EACF,CAVI,EAUH,CAACC,QAAD,EAAWD,KAAX,EAAkBD,OAAlB,CAVG,CAAT;EAYA,oBACI;IAAM,MAAM,EAAC,GAAb;IAAiB,MAAM,EAAC,KAAxB;IAAA,wBACA;MACI,QAAQ,EAAGK,CAAD,IAAO;QACbH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;MACH,CAHL;MAII,IAAI,EAAC,MAJT;MAKI,WAAW,EAAC,cALhB;MAMI,IAAI,EAAC,MANT;MAOI,SAAS,EAAC;IAPd;MAAA;MAAA;MAAA;IAAA,QADA,eAUA;MACI,SAAS,EAAG,QADhB;MAEI,OAAO,MAFX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GAjCQR,M;UACSJ,U;;;KADTI,M;AAiCR;AACD,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}