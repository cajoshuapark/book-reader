{"ast":null,"code":"import { gql } from \"@apollo/client\";\nexport function fetchFirstPage(title) {\n  return gql`\n  query fetchBookIdFromTitle {\n    allBooks(\n      condition: { \n        title: \"${title}\"\n      }\n    ){\n      nodes {\n        bookId\n        pagenum\n        content\n      }\n    }\n  }\n`;\n}\nexport const FETCH_BOOK_ID_FROM_TITLE = gql`\n  query fetchBookIdFromTitle {\n    allBooks(\n      condition: { \n        title: \"Harry Potter\"\n      }\n    ) {\n      nodes {\n        bookId\n        pagenum\n        content\n      }\n    }\n  }\n`;\nexport const FETCH_FIRST_PAGE = gql`\n  query getBookId {\n    allBooks(condition:{\n      title: \"Harry Potter\"\n    }){\n      nodes{\n          id\n        pagesByBookId{\n          nodes{\n            pagenum\n            content\n          }\n        }\n      }\n    }\n  }\n`;\nexport const TEST = gql`\n  query test {\n    allPages {\n      nodes {\n        bookId\n        pagenum\n        content\n      }\n    }\n  }\n`;\nexport const TEST2 = gql`\n  query test2($id: Int!) {\n    pageById(id: $id){\n      bookId\n      pagenum\n      content\n    }\n  }\n`;","map":{"version":3,"names":["gql","fetchFirstPage","title","FETCH_BOOK_ID_FROM_TITLE","FETCH_FIRST_PAGE","TEST","TEST2"],"sources":["/Users/cajoshuapark/flask/client/src/gql/query.ts"],"sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport function fetchFirstPage (title:String) {\n  return gql`\n  query fetchBookIdFromTitle {\n    allBooks(\n      condition: { \n        title: \"${title}\"\n      }\n    ){\n      nodes {\n        bookId\n        pagenum\n        content\n      }\n    }\n  }\n`;\n}\n\nexport const FETCH_BOOK_ID_FROM_TITLE = gql`\n  query fetchBookIdFromTitle {\n    allBooks(\n      condition: { \n        title: \"Harry Potter\"\n      }\n    ) {\n      nodes {\n        bookId\n        pagenum\n        content\n      }\n    }\n  }\n`;\n\nexport const FETCH_FIRST_PAGE = gql`\n  query getBookId {\n    allBooks(condition:{\n      title: \"Harry Potter\"\n    }){\n      nodes{\n          id\n        pagesByBookId{\n          nodes{\n            pagenum\n            content\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const TEST = gql `\n  query test {\n    allPages {\n      nodes {\n        bookId\n        pagenum\n        content\n      }\n    }\n  }\n`;\n\nexport const TEST2 = gql `\n  query test2($id: Int!) {\n    pageById(id: $id){\n      bookId\n      pagenum\n      content\n    }\n  }\n`;\n\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,SAASC,cAAT,CAAyBC,KAAzB,EAAuC;EAC5C,OAAOF,GAAI;AACb;AACA;AACA;AACA,kBAAkBE,KAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdE;AAeD;AAED,OAAO,MAAMC,wBAAwB,GAAGH,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdO;AAgBP,OAAO,MAAMI,gBAAgB,GAAGJ,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBO;AAkBP,OAAO,MAAMK,IAAI,GAAGL,GAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVO;AAYP,OAAO,MAAMM,KAAK,GAAGN,GAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO"},"metadata":{},"sourceType":"module"}