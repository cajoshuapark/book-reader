{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Page from './components/page';\nimport Intro from './components/intro';\nimport Navbar from './components/navbar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { gql, useQuery } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport Search from './components/searchBook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const [pageDetails, setData] = useState({title: '', pagenum: '', content: ''});\n  const [pageDetails, setData] = useState({\n    bookId: '',\n    pagenum: '',\n    content: ''\n  });\n  const [currPage, setCurrPage] = useState(1);\n  const {\n    search\n  } = window.location;\n  const query = new URLSearchParams(search).get('book');\n  const titleInput = query === null || query === void 0 ? void 0 : query.replace(/\\s/g, '');\n  console.log(query);\n  let history = useHistory();\n\n  function handleClick(props) {\n    history.push(`/${props}`);\n  } // useQuery will send query to backend through uri link and get the data\n\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(gql`\n  query test {\n    allPages {\n      nodes {\n        bookId\n        pagenum\n        content\n        nodeId\n      }\n    }\n  }\n`);\n  if (data) console.log(data);\n  if (loading) console.log('Loading...');\n  if (error) console.log(`Error! ${error.message}`); // body in useEffect will run after page is rendered. \n\n  useEffect(() => {\n    if (query) {\n      // setData(data.pageById)\n      //regex to remove space\n      handleClick(titleInput);\n    }\n  });\n  console.log(pageDetails); // // console.log(query);\n  // useEffect(() => {\n  //   // invalid url will trigger an 404 error\n  //   const { search } = window.location;\n  //   const query = new URLSearchParams(search).get('book');\n  //   fetch(\"/getpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(query)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   )\n  // }, []);\n  // function getNextPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage+1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage + 1);\n  // };\n  // function getPrevPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage-1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage - 1);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: pageDetails === null || pageDetails === void 0 ? void 0 : pageDetails.bookId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Intro, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\" + titleInput,\n          children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Intro, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/a\" + titleInput,\n          children: [/*#__PURE__*/_jsxDEV(Page, {\n            contents: pageDetails === null || pageDetails === void 0 ? void 0 : pageDetails.content,\n            pagenum: pageDetails === null || pageDetails === void 0 ? void 0 : pageDetails.pagenum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"pagenum\",\n            children: [\"page: \", pageDetails === null || pageDetails === void 0 ? void 0 : pageDetails.pagenum]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"IqCkEKj1oMwriR5YuiEshC5zs+U=\", false, function () {\n  return [useHistory, useQuery];\n});\n\n_c = App;\nexport default App; // \n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Page","Intro","Navbar","BrowserRouter","Router","Route","Switch","gql","useQuery","useHistory","Search","App","pageDetails","setData","bookId","pagenum","content","currPage","setCurrPage","search","window","location","query","URLSearchParams","get","titleInput","replace","console","log","history","handleClick","props","push","loading","error","data","message"],"sources":["/Users/cajoshuapark/flask/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport Page from './components/page';\nimport Intro from './components/intro';\nimport Navbar from './components/navbar';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport { gql, useQuery } from '@apollo/client';\nimport { FETCH_BOOK_ID_FROM_TITLE, FETCH_FIRST_PAGE,TEST, TEST2 } from './gql/query';\nimport { useHistory } from \"react-router-dom\";\nimport Search from './components/searchBook'\n\n\nconst App = () => {\n  // const [pageDetails, setData] = useState({title: '', pagenum: '', content: ''});\n  const [pageDetails, setData] = useState({bookId: '', pagenum: '', content: ''});\n  const [currPage, setCurrPage] = useState(1);\n  const { search } = window.location;\n  const query = new URLSearchParams(search).get('book');\n  const titleInput = query?.replace(/\\s/g, '');\n\n\n  console.log(query);\n  let history = useHistory();\n  function handleClick(props: String) {\n    history.push(`/${props}`);\n  }\n  // useQuery will send query to backend through uri link and get the data\n  const {  loading, error, data }  = useQuery(gql `\n  query test {\n    allPages {\n      nodes {\n        bookId\n        pagenum\n        content\n        nodeId\n      }\n    }\n  }\n`);\n  if (data) console.log(data);\n  if (loading) console.log('Loading...');\n  if (error) console.log(`Error! ${error.message}`);\n\n\n  // body in useEffect will run after page is rendered. \n  useEffect(() => {\n    if(query){\n      // setData(data.pageById)\n      //regex to remove space\n      handleClick(titleInput!);\n    }\n  }, )\n  console.log(pageDetails);\n\n  // // console.log(query);\n  // useEffect(() => {\n  //   // invalid url will trigger an 404 error\n  //   const { search } = window.location;\n  //   const query = new URLSearchParams(search).get('book');\n  //   fetch(\"/getpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(query)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   )\n  // }, []);\n\n  // function getNextPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage+1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage + 1);\n  // };\n  // function getPrevPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage-1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage - 1);\n  // }\n\n  return <Router>\n    {(\n    <div>\n      <Navbar title = {pageDetails?.bookId}/>\n      {/* <h1 className='title'>{data}</h1> */}\n      {/* <Page \n        contents={pageDetails?.content}\n        pagenum = {pageDetails?.pagenum}\n      />\n      <h2 className = \"pagenum\">page: {pageDetails?.pagenum}</h2>\n      <button className = \"circleBackButton\" onClick={getPrevPage}>\n        back page\n      </button>\n      <button className = \"circleForwardButton\" onClick={getNextPage}>\n        next page\n      </button> */}\n\n      <Switch>\n      <Route path=\"/home\">\n          <Search />\n          <Intro />\n        </Route>\n        <Route path={\"/\" + titleInput}>\n          <Search />\n          <Intro />\n        </Route>\n        <Route path={\"/a\" + titleInput}>\n          <Page \n            contents={pageDetails?.content}\n            pagenum = {pageDetails?.pagenum}\n          />\n          <h2 className = \"pagenum\">page: {pageDetails?.pagenum}</h2>\n          {/* <button className = \"circleBackButton\" onClick={getPrevPage}>\n            back page\n          </button>\n          <button className = \"circleForwardButton\" onClick={getNextPage}>\n            next page\n          </button> */}\n        </Route>\n       </Switch>\n    </div>\n  )} </Router>\n}\nexport default App;\n\n// "],"mappings":"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"},"metadata":{},"sourceType":"module"}