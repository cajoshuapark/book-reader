{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from '@apollo/client';\nimport { BrowserRouter } from 'react-router-dom'; //a terminating link that sends a GraphQL operation to a remote endpoint over HTTP\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:5000/graphql',\n  fetchOptions: {\n    mode: 'no-cors'\n  }\n});\nconst client = new ApolloClient({\n  cache: new InMemoryCache() // link: httpLink,\n\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n/*#__PURE__*/\n// apolloprivider wraps react app and allows you to access queries from anywhere in app\n_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","BrowserRouter","httpLink","uri","fetchOptions","mode","client","cache","root","createRoot","document","getElementById","render"],"sources":["/Users/cajoshuapark/flask/client/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from '@apollo/client';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n//a terminating link that sends a GraphQL operation to a remote endpoint over HTTP\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:5000/graphql',\n  fetchOptions: {\n    mode: 'no-cors',\n  },\n});\n\nconst client = new ApolloClient({\n  \n  cache: new InMemoryCache(),\n  // link: httpLink,\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\nroot.render(\n  // apolloprivider wraps react app and allows you to access queries from anywhere in app\n  <React.StrictMode>\n    <BrowserRouter>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,EAAsDC,QAAtD,QAAsE,gBAAtE;AAEA,SAASC,aAAT,QAA8B,kBAA9B,C,CAEA;;;AACA,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,CAAa;EAC5BG,GAAG,EAAE,+BADuB;EAE5BC,YAAY,EAAE;IACZC,IAAI,EAAE;EADM;AAFc,CAAb,CAAjB;AAOA,MAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;EAE9BU,KAAK,EAAE,IAAIT,aAAJ,EAFuB,CAG9B;;AAH8B,CAAjB,CAAf;AAMA,MAAMU,IAAI,GAAGb,QAAQ,CAACc,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL;AAAA;AACE;AACA,QAAC,KAAD,CAAO,UAAP;EAAA,uBACE,QAAC,aAAD;IAAA,uBACE,QAAC,cAAD;MAAgB,MAAM,EAAEN,MAAxB;MAAA,uBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QAFF,E,CAWA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}