{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport reportWebVitals from './reportWebVitals';\nimport { HttpLink } from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(_ref => {\n  let {\n    graphqlErrors,\n    networkError\n  } = _ref;\n\n  if (graphqlErrors) {\n    graphqlErrors.map(_ref2 => {\n      let {\n        message,\n        location,\n        path\n      } = _ref2;\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\nconst httpLink = from([errorLink, new HttpLink({\n  uri: \"http://localhost:5000/graphql\"\n})]);\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: new InMemoryCache(),\n  link: httpLink\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n/*#__PURE__*/\n// apolloprivider wraps react app and allows you to access queries from anywhere in app\n_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nreportWebVitals(console.log);","map":{"version":3,"names":["React","ReactDOM","App","ApolloClient","InMemoryCache","ApolloProvider","reportWebVitals","HttpLink","onError","errorLink","graphqlErrors","networkError","map","message","location","path","alert","httpLink","from","uri","client","cache","link","root","createRoot","document","getElementById","render","console","log"],"sources":["/Users/cajoshuapark/flask/client/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport reportWebVitals from './reportWebVitals';\nimport { HttpLink } from '@apollo/client';\nimport {onError} from '@apollo/client/link/error'\n\nconst errorLink = onError(({graphqlErrors, networkError}) => {\n  if(graphqlErrors){\n    graphqlErrors.map(({message, location, path}) => {\n      alert(`Graphql error ${message}`)\n    });\n  }\n});\n\nconst httpLink = from([\n  errorLink, new HttpLink({uri: \"http://localhost:5000/graphql\"}),\n])\n\n\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: new InMemoryCache(),\n  link: httpLink,\n\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\nroot.render(\n  // apolloprivider wraps react app and allows you to access queries from anywhere in app\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nreportWebVitals(console.log);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,QAA4D,gBAA5D;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,QAAmC;EAAA,IAAlC;IAACE,aAAD;IAAgBC;EAAhB,CAAkC;;EAC3D,IAAGD,aAAH,EAAiB;IACfA,aAAa,CAACE,GAAd,CAAkB,SAA+B;MAAA,IAA9B;QAACC,OAAD;QAAUC,QAAV;QAAoBC;MAApB,CAA8B;MAC/CC,KAAK,CAAE,iBAAgBH,OAAQ,EAA1B,CAAL;IACD,CAFD;EAGD;AACF,CANwB,CAAzB;AAQA,MAAMI,QAAQ,GAAGC,IAAI,CAAC,CACpBT,SADoB,EACT,IAAIF,QAAJ,CAAa;EAACY,GAAG,EAAE;AAAN,CAAb,CADS,CAAD,CAArB;AAMA,MAAMC,MAAM,GAAG,IAAIjB,YAAJ,CAAiB;EAC9BgB,GAAG,EAAE,+BADyB;EAE9BE,KAAK,EAAE,IAAIjB,aAAJ,EAFuB;EAG9BkB,IAAI,EAAEL;AAHwB,CAAjB,CAAf;AAOA,MAAMM,IAAI,GAAGtB,QAAQ,CAACuB,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL;AAAA;AACE;AACA,QAAC,cAAD;EAAgB,MAAM,EAAEP,MAAxB;EAAA,uBACE,QAAC,KAAD,CAAO,UAAP;IAAA,uBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QAFF,E,CASA;AACA;AACA;AACA;;AACAd,eAAe,CAACsB,OAAO,CAACC,GAAT,CAAf"},"metadata":{},"sourceType":"module"}