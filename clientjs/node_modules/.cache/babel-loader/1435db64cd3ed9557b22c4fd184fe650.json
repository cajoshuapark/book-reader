{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/components/allBooks.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { FETCH_ALL_BOOKS } from '../gql/query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllBooks() {\n  _s();\n\n  const [books, setBooks] = useState([{\n    id: 0,\n    title: \"\"\n  }]); // useQuery will send query to backend through uri link and get the data\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_ALL_BOOKS); // body in useEffect will run after page is rendered. \n\n  useEffect(() => {\n    if (data) {\n      setBooks(data.allBooks.nodes);\n      console.log(data.allBooks.nodes);\n    }\n  }, [data]);\n  if (loading) console.log('Loading...');\n  if (error) console.log(`Error! ${error.message}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), books.map(book => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://localhost:3000/page?read=\" + book.title,\n      children: book.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllBooks, \"PPLwmahKMN5lo4Bn1HCTt36TRbI=\", false, function () {\n  return [useQuery];\n});\n\n_c = AllBooks;\nexport default AllBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllBooks\");","map":{"version":3,"names":["React","useState","useEffect","useQuery","FETCH_ALL_BOOKS","AllBooks","books","setBooks","id","title","loading","error","data","allBooks","nodes","console","log","message","map","book"],"sources":["/Users/cajoshuapark/flask/client/src/components/allBooks.tsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { useQuery } from '@apollo/client';\nimport { FETCH_ALL_BOOKS } from '../gql/query';\n\n\nfunction AllBooks () {\n    const [books, setBooks] = useState([{ id:0, title:\"\" }]);\n    \n\n    // useQuery will send query to backend through uri link and get the data\n    const {  loading, error, data } = useQuery(FETCH_ALL_BOOKS);\n    // body in useEffect will run after page is rendered. \n    useEffect(() => {\n        if(data){\n            setBooks(data.allBooks.nodes);\n            console.log(data.allBooks.nodes);\n        }\n    }, [data]);\n    if (loading) console.log('Loading...');\n    if (error) console.log(`Error! ${error.message}`);\n\n    return (\n        <div className=\"page\">\n            <h1 className=\"title\"></h1>\n            {books.map((book) => (\n                <a href={\"http://localhost:3000/page?read=\" + book.title}>{book.title}</a>\n            ))}\n        </div>\n    )\n}\n\nexport default AllBooks;\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,eAAT,QAAgC,cAAhC;;;AAGA,SAASC,QAAT,GAAqB;EAAA;;EACjB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAC;IAAEO,EAAE,EAAC,CAAL;IAAQC,KAAK,EAAC;EAAd,CAAD,CAAD,CAAlC,CADiB,CAIjB;;EACA,MAAM;IAAGC,OAAH;IAAYC,KAAZ;IAAmBC;EAAnB,IAA4BT,QAAQ,CAACC,eAAD,CAA1C,CALiB,CAMjB;;EACAF,SAAS,CAAC,MAAM;IACZ,IAAGU,IAAH,EAAQ;MACJL,QAAQ,CAACK,IAAI,CAACC,QAAL,CAAcC,KAAf,CAAR;MACAC,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,QAAL,CAAcC,KAA1B;IACH;EACJ,CALQ,EAKN,CAACF,IAAD,CALM,CAAT;EAMA,IAAIF,OAAJ,EAAaK,OAAO,CAACC,GAAR,CAAY,YAAZ;EACb,IAAIL,KAAJ,EAAWI,OAAO,CAACC,GAAR,CAAa,UAASL,KAAK,CAACM,OAAQ,EAApC;EAEX,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,wBACI;MAAI,SAAS,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKX,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACP;MAAG,IAAI,EAAE,qCAAqCA,IAAI,CAACV,KAAnD;MAAA,UAA2DU,IAAI,CAACV;IAAhE;MAAA;MAAA;MAAA;IAAA,QADH,CAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;GAxBQJ,Q;UAK6BF,Q;;;KAL7BE,Q;AA0BT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}