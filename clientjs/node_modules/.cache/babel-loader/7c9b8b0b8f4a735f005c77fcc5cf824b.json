{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/navbar';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport { useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const [pageDetails, setData] = useState({title: '', pagenum: '', content: ''});\n  const [pageDetails, setData] = useState({\n    bookId: '',\n    pagenum: '',\n    content: ''\n  });\n  const [currPage, setCurrPage] = useState(1); // const { search } = window.location;\n  // const query = new URLSearchParams(search).get('book');\n  // console.log(query);\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(gql`\n  query test2($id: Int!) {\n    pageById(id: $id){\n      bookId\n      pagenum\n      content\n    }\n  }\n`, {\n    variables: {\n      id: 1\n    }\n  });\n  console.log(data);\n  if (loading) console.log('Loading...');\n  if (error) console.log(`Error! ${error.message}`); // body in useEffect will run after page is rendered. \n\n  useEffect(() => {\n    if (data) {\n      setData(data.pageById);\n      console.log(data);\n    }\n  }, [data]);\n  console.log(pageDetails); // // console.log(query);\n  // useEffect(() => {\n  //   // invalid url will trigger an 404 error\n  //   const { search } = window.location;\n  //   const query = new URLSearchParams(search).get('book');\n  //   fetch(\"/getpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(query)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   )\n  // }, []);\n  // function getNextPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage+1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage + 1);\n  // };\n  // function getPrevPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage-1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage - 1);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        title: pageDetails === null || pageDetails === void 0 ? void 0 : pageDetails.bookId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"0mSbCU187eOufTjyoEbF5lMpIGk=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App; // \n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","BrowserRouter","Router","useQuery","App","pageDetails","setData","bookId","pagenum","content","currPage","setCurrPage","loading","error","data","gql","variables","id","console","log","message","pageById"],"sources":["/Users/cajoshuapark/flask/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport Page from './components/page';\nimport Navbar from './components/navbar';\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\nimport './App.css';\nimport { useQuery } from '@apollo/client';\nimport { FETCH_BOOK_ID_FROM_TITLE, FETCH_FIRST_PAGE,TEST, TEST2 } from './gql/query';\n\nconst App = () => {\n  // const [pageDetails, setData] = useState({title: '', pagenum: '', content: ''});\n  const [pageDetails, setData] = useState({bookId: '', pagenum: '', content: ''});\n  const [currPage, setCurrPage] = useState(1);\n  // const { search } = window.location;\n  // const query = new URLSearchParams(search).get('book');\n  // console.log(query);\n\n  const { loading, error, data }  = useQuery(gql `\n  query test2($id: Int!) {\n    pageById(id: $id){\n      bookId\n      pagenum\n      content\n    }\n  }\n`, {\n    variables:{\n      id: 1\n    }\n  });\n  console.log(data);\n  if (loading) console.log('Loading...');\n  if (error) console.log(`Error! ${error.message}`);\n\n\n  // body in useEffect will run after page is rendered. \n  useEffect(() => {\n    if(data){\n      setData(data.pageById)\n      console.log(data)\n    }\n  }, [data])\n  console.log(pageDetails);\n\n  // // console.log(query);\n  // useEffect(() => {\n  //   // invalid url will trigger an 404 error\n  //   const { search } = window.location;\n  //   const query = new URLSearchParams(search).get('book');\n  //   fetch(\"/getpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(query)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   )\n  // }, []);\n\n  // function getNextPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage+1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage + 1);\n  // };\n  // function getPrevPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage-1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage - 1);\n  // }\n\n  return <Router>\n    {(\n    <div>\n      <Navbar title = {pageDetails?.bookId}/>\n      {/* <h1 className='title'>{data}</h1> */}\n      {/* <Page \n        contents={pageDetails?.content}\n        pagenum = {pageDetails?.pagenum}\n      />\n      <h2 className = \"pagenum\">page: {pageDetails?.pagenum}</h2>\n      <button className = \"circleBackButton\" onClick={getPrevPage}>\n        back page\n      </button>\n      <button className = \"circleForwardButton\" onClick={getNextPage}>\n        next page\n      </button> */}\n\n      {/* <Switch>\n        <Route path=\"/home\">\n          <Search />\n          <h1 className='introText'>SEARCH FOR A BOOK</h1>\n        </Route>\n        <Route path={\"/page\"}>\n          <Page \n            contents={pageDetails?.content}\n            pagenum = {pageDetails?.pagenum}\n          />\n          <h2 className = \"pagenum\">page: {pageDetails?.pagenum}</h2>\n          <button className = \"circleBackButton\" onClick={getPrevPage}>\n            back page\n          </button>\n          <button className = \"circleForwardButton\" onClick={getNextPage}>\n            next page\n          </button>\n        </Route>\n       </Switch> */}\n    </div>\n  )} </Router>\n}\nexport default App;\n\n// "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAA8C,kBAA9C;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACC,WAAD,EAAcC,OAAd,IAAyBR,QAAQ,CAAC;IAACS,MAAM,EAAE,EAAT;IAAaC,OAAO,EAAE,EAAtB;IAA0BC,OAAO,EAAE;EAAnC,CAAD,CAAvC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,CAAD,CAAxC,CAHgB,CAIhB;EACA;EACA;;EAEA,MAAM;IAAEc,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA4BX,QAAQ,CAACY,GAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAR4C,EAQzC;IACCC,SAAS,EAAC;MACRC,EAAE,EAAE;IADI;EADX,CARyC,CAA1C;EAaAC,OAAO,CAACC,GAAR,CAAYL,IAAZ;EACA,IAAIF,OAAJ,EAAaM,OAAO,CAACC,GAAR,CAAY,YAAZ;EACb,IAAIN,KAAJ,EAAWK,OAAO,CAACC,GAAR,CAAa,UAASN,KAAK,CAACO,OAAQ,EAApC,EAvBK,CA0BhB;;EACArB,SAAS,CAAC,MAAM;IACd,IAAGe,IAAH,EAAQ;MACNR,OAAO,CAACQ,IAAI,CAACO,QAAN,CAAP;MACAH,OAAO,CAACC,GAAR,CAAYL,IAAZ;IACD;EACF,CALQ,EAKN,CAACA,IAAD,CALM,CAAT;EAMAI,OAAO,CAACC,GAAR,CAAYd,WAAZ,EAjCgB,CAmChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAO,QAAC,MAAD;IAAA,wBAEL;MAAA,uBACE,QAAC,MAAD;QAAQ,KAAK,EAAIA,WAAJ,aAAIA,WAAJ,uBAAIA,WAAW,CAAEE;MAA9B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAsCD,CAxHD;;GAAMH,G;UAQ8BD,Q;;;KAR9BC,G;AAyHN,eAAeA,GAAf,C,CAEA"},"metadata":{},"sourceType":"module"}