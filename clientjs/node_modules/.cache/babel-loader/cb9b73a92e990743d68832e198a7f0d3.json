{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from '@apollo/client';\nimport { BrowserRouter } from 'react-router-dom'; // import reportWebVitals from './reportWebVitals';\n//a terminating link that sends a GraphQL operation to a remote endpoint over HTTP\n// cors origin policy is caused from trhe brower that blocks requests from external url if they are diff origin. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000/graphql',\n  fetchOptions: {\n    mode: 'no-cors'\n  }\n});\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: 'http://localhost:5000/graphql'\n}); // if you call the same query again, it will access from the cache so it is faster \n// export const client = new ApolloClient({\n//   cache: new InMemoryCache(),\n//   link: httpLink,\n// });\n// client.query({\n//     query: gql`\n//     query e {\n//       books{\n//         title\n//       }\n//     }\n//     `\n//   }).then(result => console.log(result));\n\nconst axios = require(\"axios\");\n\naxios({\n  url: 'https://1jzxrj179.lp.gql.zone/graphql',\n  method: 'post',\n  data: {\n    query: `\n          query test2($id: Int!) {\n              pageById(id: $id){\n                bookId\n                pagenum\n                content\n              }\n            }\n        `\n  }\n}).then(result => {\n  console.log(result.data);\n}); // export const client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n//   cache: new InMemoryCache(),\n//   link: httpLink,\n// });\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n/*#__PURE__*/\n// apolloprivider wraps react app and allows you to access queries from anywhere in app\n// force refresh loads all the components when changing paths\n// brower router allows the browser URL to be changed, and keeps the UI in sync with the URL\n_jsxDEV(BrowserRouter, {\n  forceRefresh: true,\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 1\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","BrowserRouter","httpLink","uri","fetchOptions","mode","client","cache","axios","require","url","method","data","query","then","result","console","log","root","createRoot","document","getElementById","render"],"sources":["/Users/cajoshuapark/flask/client/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { gql, NormalizedCacheObject, ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from '@apollo/client';\nimport {BrowserRouter } from 'react-router-dom';\n// import reportWebVitals from './reportWebVitals';\n\n\n\n//a terminating link that sends a GraphQL operation to a remote endpoint over HTTP\n// cors origin policy is caused from trhe brower that blocks requests from external url if they are diff origin. \nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000/graphql',\n  fetchOptions: {\n    mode: 'no-cors',\n  },\n});\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: 'http://localhost:5000/graphql',\n});\n// if you call the same query again, it will access from the cache so it is faster \n// export const client = new ApolloClient({\n//   cache: new InMemoryCache(),\n//   link: httpLink,\n// });\n\n// client.query({\n//     query: gql`\n//     query e {\n//       books{\n//         title\n//       }\n//     }\n//     `\n//   }).then(result => console.log(result));\n\n  const axios = require(\"axios\")\n  axios({\n    url: 'https://1jzxrj179.lp.gql.zone/graphql',\n    method: 'post',\n    data: {\n      query: `\n          query test2($id: Int!) {\n              pageById(id: $id){\n                bookId\n                pagenum\n                content\n              }\n            }\n        `\n    }\n  }).then((result) => {\n    console.log(result.data)\n  });\n  \n// export const client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n//   cache: new InMemoryCache(),\n//   link: httpLink,\n// });\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\nroot.render(\n  // apolloprivider wraps react app and allows you to access queries from anywhere in app\n// force refresh loads all the components when changing paths\n// brower router allows the browser URL to be changed, and keeps the UI in sync with the URL\n<BrowserRouter forceRefresh={true}> \n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAqCC,YAArC,EAAmDC,aAAnD,EAAkEC,cAAlE,EAAkFC,QAAlF,QAAkG,gBAAlG;AACA,SAAQC,aAAR,QAA6B,kBAA7B,C,CACA;AAIA;AACA;;;AACA,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,CAAa;EAC5BG,GAAG,EAAE,+BADuB;EAE5BC,YAAY,EAAE;IACZC,IAAI,EAAE;EADM;AAFc,CAAb,CAAjB;AAMA,OAAO,MAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;EACrCU,KAAK,EAAE,IAAIT,aAAJ,EAD8B;EAErCK,GAAG,EAAE;AAFgC,CAAjB,CAAf,C,CAIP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,MAAMK,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACAD,KAAK,CAAC;EACJE,GAAG,EAAE,uCADD;EAEJC,MAAM,EAAE,MAFJ;EAGJC,IAAI,EAAE;IACJC,KAAK,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATU;AAHF,CAAD,CAAL,CAcGC,IAdH,CAcSC,MAAD,IAAY;EAClBC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACH,IAAnB;AACD,CAhBD,E,CAkBF;AACA;AACA;AACA;;AAGA,MAAMM,IAAI,GAAGvB,QAAQ,CAACwB,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL;AAAA;AACE;AACF;AACA;AACA,QAAC,aAAD;EAAe,YAAY,EAAE,IAA7B;EAAA,uBACE,QAAC,cAAD;IAAgB,MAAM,EAAEhB,MAAxB;IAAA,uBACE,QAAC,KAAD,CAAO,UAAP;MAAA,uBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QAJA,E,CAaA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}