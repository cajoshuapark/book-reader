{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Search from './searchBook';\nimport { BrowserRouter as Router } from \"react-router-dom\"; // const books = [\n//   { title: 'Harry Potter' },\n//   { title: 'Brisingr' },\n// ];\n// const filterPosts = (books, query) => {\n//   if (!query) {\n//       return books;\n//   }\n//   return books.filter((book) => {\n//       const bookName = book.title;\n//       return bookName.includes(query) || bookName.toLowerCase().includes(query) ;\n//   });\n// };\n// function handlePostQuery(query){\n//   let myParams = {\n//       title: query\n//   }\n//   const [post, setPost] = React.useState(null);\n//   const [error, setError] = React.useState(null);\n//   if (query !== \"\") {\n//     axios.post('http://localhost:5000/getbook', myParams)\n//         .then(\n//           function(response){\n//             console.log(response.title);\n//     //Perform action based on response\n//           }\n//         ).catch(setError(error){\n//           console.log(error);\n//         }\n//     );\n//   }\n// }\n// const App = () => {\n//   const { search } = window.location;\n//   const query = new URLSearchParams(search).get('book');\n//   console.log(query);\n//   handlePostQuery(query);\n//   return <Router>\n//   {(\n//     <div>\n//         <Search/>\n//     </div>\n//   )} </Router>\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = \"http://localhost:5000\";\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  const {\n    search\n  } = window.location;\n  const query = new URLSearchParams(search).get('book'); // console.log(query);\n\n  useEffect(() => {\n    // invalid url will trigger an 404 error\n    fetch(\"/getbook\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        \"content_type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state.value)\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      setData(data);\n      console.log(data);\n    });\n  }, []); // if (error) return `Error: ${error.message}`;\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = App;\nexport default App; // function App() {\n//   const [data, setData] = useState({});\n//   useEffect(() => {\n//     fetch(\"/test/\").then(res => res.json()).then(\n//       data => {\n//         setData(data)\n//         console.log(data)\n//       }\n//     )\n//   }, [])\n//   return (\n//     <div>\n//       {(typeof data.pageContent === 'undefined') ? (\n//         <p>Synching</p>\n//       ):(\n//         <p>{data.pageContent}</p>\n//       )}\n//     </div>\n//   )\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Search","BrowserRouter","Router","baseURL","App","data","setData","search","window","location","query","URLSearchParams","get","fetch","method","cache","headers","body","JSON","stringify","state","value","then","res","json","console","log"],"sources":["/Users/cajoshuapark/flask/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect} from 'react'\nimport axios from 'axios'\nimport Search from './searchBook'\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// const books = [\n//   { title: 'Harry Potter' },\n//   { title: 'Brisingr' },\n// ];\n\n// const filterPosts = (books, query) => {\n//   if (!query) {\n//       return books;\n//   }\n//   return books.filter((book) => {\n//       const bookName = book.title;\n//       return bookName.includes(query) || bookName.toLowerCase().includes(query) ;\n//   });\n// };\n\n// function handlePostQuery(query){\n//   let myParams = {\n//       title: query\n//   }\n//   const [post, setPost] = React.useState(null);\n//   const [error, setError] = React.useState(null);\n//   if (query !== \"\") {\n//     axios.post('http://localhost:5000/getbook', myParams)\n//         .then(\n//           function(response){\n//             console.log(response.title);\n//     //Perform action based on response\n//           }\n//         ).catch(setError(error){\n//           console.log(error);\n//         }\n//     );\n//   }\n// }\n\n\n// const App = () => {\n//   const { search } = window.location;\n//   const query = new URLSearchParams(search).get('book');\n//   console.log(query);\n//   handlePostQuery(query);\n//   return <Router>\n//   {(\n//     <div>\n//         <Search/>\n//     </div>\n//   )} </Router>\n// }\n\n\n\nconst baseURL = \"http://localhost:5000\";\n\nconst App = () => {\n  const [data, setData] = React.useState(null);\n  const { search } = window.location;\n  const query = new URLSearchParams(search).get('book');\n  // console.log(query);\n  useEffect(() => {\n    // invalid url will trigger an 404 error\n    fetch(\"/getbook\", {\n      method:\"POST\",\n      cache: \"no-cache\",\n      headers:{\n        \"content_type\":\"application/json\",\n      },\n      body:JSON.stringify(this.state.value)\n    }).then(res => {\n      return res.json()\n    }).then(\n      data => {\n        setData(data)\n        console.log(data)\n      }\n    )\n  }, [])\n\n  // if (error) return `Error: ${error.message}`;\n  return <Router>\n    {(\n    <div>\n        <Search/>\n        <h1>{data}</h1>\n    </div>\n  )} </Router>\n}\nexport default App;\n\n\n// function App() {\n//   const [data, setData] = useState({});\n//   useEffect(() => {\n//     fetch(\"/test/\").then(res => res.json()).then(\n//       data => {\n//         setData(data)\n//         console.log(data)\n//       }\n//     )\n//   }, [])\n\n//   return (\n//     <div>\n//       {(typeof data.pageContent === 'undefined') ? (\n//         <p>Synching</p>\n//       ):(\n//         <p>{data.pageContent}</p>\n//       )}\n//     </div>\n//   )\n// }\n\n// export default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,MAAMC,OAAO,GAAG,uBAAhB;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACC,QAAN,CAAe,IAAf,CAAxB;EACA,MAAM;IAAEU;EAAF,IAAaC,MAAM,CAACC,QAA1B;EACA,MAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoBJ,MAApB,EAA4BK,GAA5B,CAAgC,MAAhC,CAAd,CAHgB,CAIhB;;EACAd,SAAS,CAAC,MAAM;IACd;IACAe,KAAK,CAAC,UAAD,EAAa;MAChBC,MAAM,EAAC,MADS;MAEhBC,KAAK,EAAE,UAFS;MAGhBC,OAAO,EAAC;QACN,gBAAe;MADT,CAHQ;MAMhBC,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWC,KAA1B;IANW,CAAb,CAAL,CAOGC,IAPH,CAOQC,GAAG,IAAI;MACb,OAAOA,GAAG,CAACC,IAAJ,EAAP;IACD,CATD,EASGF,IATH,CAUEjB,IAAI,IAAI;MACNC,OAAO,CAACD,IAAD,CAAP;MACAoB,OAAO,CAACC,GAAR,CAAYrB,IAAZ;IACD,CAbH;EAeD,CAjBQ,EAiBN,EAjBM,CAAT,CALgB,CAwBhB;;EACA,oBAAO,QAAC,MAAD;IAAA,wBAEL;MAAA,wBACI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAKA;MAAL;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAOD,CAhCD;;GAAMD,G;;KAAAA,G;AAiCN,eAAeA,GAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}