{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { gql, ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from '@apollo/client';\nimport { BrowserRouter } from 'react-router-dom'; // import reportWebVitals from './reportWebVitals';\n//a terminating link that sends a GraphQL operation to a remote endpoint over HTTP\n// cors origin policy is caused from trhe brower that blocks requests from external url if they are diff origin. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:5000/graphql',\n  fetchOptions: {\n    mode: 'no-cors'\n  }\n}); // if you call the same query again, it will access from the cache so it is faster \n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: httpLink\n});\nclient.query({\n  query: gql`\n    query test {\n      allPages {\n        nodes {\n          bookId\n          pagenum\n          content\n        }\n      }\n    }\n    `\n}).then(result => console.log(result)); // export const client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n//   cache: new InMemoryCache(),\n//   link: httpLink,\n// });\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n/*#__PURE__*/\n// apolloprivider wraps react app and allows you to access queries from anywhere in app\n// force refresh loads all the components when changing paths\n// brower router allows the browser URL to be changed, and keeps the UI in sync with the URL\n_jsxDEV(BrowserRouter, {\n  forceRefresh: true,\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 1\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","gql","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","BrowserRouter","httpLink","uri","fetchOptions","mode","client","cache","link","query","then","result","console","log","root","createRoot","document","getElementById","render"],"sources":["/Users/cajoshuapark/flask/client/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { gql, NormalizedCacheObject, ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from '@apollo/client';\nimport {BrowserRouter } from 'react-router-dom';\n// import reportWebVitals from './reportWebVitals';\n\n\n\n//a terminating link that sends a GraphQL operation to a remote endpoint over HTTP\n// cors origin policy is caused from trhe brower that blocks requests from external url if they are diff origin. \nconst httpLink = new HttpLink({\n  uri: 'http://localhost:5000/graphql',\n  fetchOptions: {\n    mode: 'no-cors',\n  },\n});\n\n// if you call the same query again, it will access from the cache so it is faster \nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: httpLink,\n});\n\nclient.query({\n    query: gql`\n    query test {\n      allPages {\n        nodes {\n          bookId\n          pagenum\n          content\n        }\n      }\n    }\n    `\n  }).then(result => console.log(result));\n\n// export const client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n//   cache: new InMemoryCache(),\n//   link: httpLink,\n// });\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\nroot.render(\n  // apolloprivider wraps react app and allows you to access queries from anywhere in app\n// force refresh loads all the components when changing paths\n// brower router allows the browser URL to be changed, and keeps the UI in sync with the URL\n<BrowserRouter forceRefresh={true}> \n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,GAAT,EAAqCC,YAArC,EAAmDC,aAAnD,EAAkEC,cAAlE,EAAkFC,QAAlF,QAAkG,gBAAlG;AACA,SAAQC,aAAR,QAA6B,kBAA7B,C,CACA;AAIA;AACA;;;AACA,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,CAAa;EAC5BG,GAAG,EAAE,+BADuB;EAE5BC,YAAY,EAAE;IACZC,IAAI,EAAE;EADM;AAFc,CAAb,CAAjB,C,CAOA;;AACA,OAAO,MAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;EACrCU,KAAK,EAAE,IAAIT,aAAJ,EAD8B;EAErCU,IAAI,EAAEN;AAF+B,CAAjB,CAAf;AAKPI,MAAM,CAACG,KAAP,CAAa;EACTA,KAAK,EAAEb,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXa,CAAb,EAYKc,IAZL,CAYUC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAZpB,E,CAcA;AACA;AACA;AACA;;AAGA,MAAMG,IAAI,GAAGpB,QAAQ,CAACqB,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL;AAAA;AACE;AACF;AACA;AACA,QAAC,aAAD;EAAe,YAAY,EAAE,IAA7B;EAAA,uBACE,QAAC,cAAD;IAAgB,MAAM,EAAEZ,MAAxB;IAAA,uBACE,QAAC,KAAD,CAAO,UAAP;MAAA,uBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QAJA,E,CAaA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}