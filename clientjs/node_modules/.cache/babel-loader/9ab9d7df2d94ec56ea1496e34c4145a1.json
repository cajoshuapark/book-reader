{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Page from './page';\nimport Navbar from './navbar';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclient.query({\n  query: gql`\n      query GetLocations {\n        locations {\n          id\n          name\n          description\n          photo\n        }\n      }\n    `\n}).then(result => console.log(result));\n\nconst App = () => {\n  _s();\n\n  const [pageDetails, setData] = useState({\n    title: '',\n    pagenum: '',\n    content: ''\n  });\n  const [currPage, setCurrPage] = useState(1); // console.log(query);\n\n  useEffect(() => {\n    // invalid url will trigger an 404 error\n    const {\n      search\n    } = window.location;\n    const query = new URLSearchParams(search).get('book');\n    fetch(\"/getpage\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(query)\n    }).then(res => res.json()).then(pageDetails => {\n      setData(pageDetails); // console.log(pageDetails)\n    });\n  }, []);\n\n  function getNextPage() {\n    fetch(\"/nextpage\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(currPage + 1)\n    }).then(res => res.json()).then(pageDetails => {\n      setData(pageDetails); // console.log(pageDetails)\n    });\n    setCurrPage(currPage + 1);\n  }\n\n  ;\n\n  function getPrevPage() {\n    fetch(\"/nextpage\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(currPage - 1)\n    }).then(res => res.json()).then(pageDetails => {\n      setData(pageDetails); // console.log(pageDetails)\n    });\n    setCurrPage(currPage - 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: pageDetails === null || pageDetails === void 0 ? void 0 : pageDetails.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Page, {\n        contents: pageDetails === null || pageDetails === void 0 ? void 0 : pageDetails.content,\n        pagenum: pageDetails === null || pageDetails === void 0 ? void 0 : pageDetails.pagenum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pagenum\",\n        children: [\"page: \", pageDetails === null || pageDetails === void 0 ? void 0 : pageDetails.pagenum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"circleBackButton\",\n        onClick: getPrevPage,\n        children: \"back page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"circleForwardButton\",\n        onClick: getNextPage,\n        children: \"next page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"yy4ky6o+5dJ0Y9lFbnMbDcGsKII=\");\n\n_c = App;\nexport default App; // \n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Page","Navbar","BrowserRouter","Router","Switch","client","query","gql","then","result","console","log","App","pageDetails","setData","title","pagenum","content","currPage","setCurrPage","search","window","location","URLSearchParams","get","fetch","method","headers","body","JSON","stringify","res","json","getNextPage","getPrevPage"],"sources":["/Users/cajoshuapark/flask/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport Page from './page';\nimport Navbar from './navbar';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport { useQuery } from '@apollo/client';\n\nclient\n  .query({\n    query: gql`\n      query GetLocations {\n        locations {\n          id\n          name\n          description\n          photo\n        }\n      }\n    `,\n  })\n  .then((result) => console.log(result));\n\nconst App = () => {\n  const [pageDetails, setData] = useState({title: '', pagenum: '', content: ''});\n  const [currPage, setCurrPage] = useState(1);\n\n\n  // console.log(query);\n  useEffect(() => {\n    // invalid url will trigger an 404 error\n    const { search } = window.location;\n    const query = new URLSearchParams(search).get('book');\n    fetch(\"/getpage\", {\n      method:\"POST\",\n      headers: {\"Content-Type\": \"application/json\" },\n      body: JSON.stringify(query)\n    }).then(res => res.json()\n    ).then(\n      pageDetails => {\n        setData(pageDetails)\n        // console.log(pageDetails)\n      }\n    )\n  }, []);\n\n  function getNextPage() {\n    fetch(\"/nextpage\", {\n      method:\"POST\",\n      headers: {\"Content-Type\": \"application/json\" },\n      body: JSON.stringify(currPage+1)\n    }).then(res => res.json()\n    ).then(\n      pageDetails => {\n        setData(pageDetails)\n        // console.log(pageDetails)\n      }\n    );\n    setCurrPage(currPage + 1);\n  };\n  function getPrevPage() {\n    fetch(\"/nextpage\", {\n      method:\"POST\",\n      headers: {\"Content-Type\": \"application/json\" },\n      body: JSON.stringify(currPage-1)\n    }).then(res => res.json()\n    ).then(\n      pageDetails => {\n        setData(pageDetails)\n        // console.log(pageDetails)\n      }\n    );\n    setCurrPage(currPage - 1);\n    \n  }\n\n  return <Router>\n    {(\n    <div>\n      <Navbar title = {pageDetails?.title}/>\n      <Page \n            contents={pageDetails?.content}\n            pagenum = {pageDetails?.pagenum}\n          />\n          <h2 className = \"pagenum\">page: {pageDetails?.pagenum}</h2>\n          <button className = \"circleBackButton\" onClick={getPrevPage}>\n            back page\n          </button>\n          <button className = \"circleForwardButton\" onClick={getNextPage}>\n            next page\n          </button>\n      <Switch>\n        {/* <Route path=\"/home\">\n          <Search />\n          <h1 className='introText'>SEARCH FOR A BOOK</h1>\n        </Route>\n        <Route path={\"/page\"}>\n          <Page \n            contents={pageDetails?.content}\n            pagenum = {pageDetails?.pagenum}\n          />\n          <h2 className = \"pagenum\">page: {pageDetails?.pagenum}</h2>\n          <button className = \"circleBackButton\" onClick={getPrevPage}>\n            back page\n          </button>\n          <button className = \"circleForwardButton\" onClick={getNextPage}>\n            next page\n          </button>\n        </Route> */}\n       </Switch>\n    </div>\n  )} </Router>\n}\nexport default App;\n\n// "],"mappings":"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"},"metadata":{},"sourceType":"module"}