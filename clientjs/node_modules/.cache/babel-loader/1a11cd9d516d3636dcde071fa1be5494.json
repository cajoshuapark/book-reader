{"ast":null,"code":"var _jsxFileName = \"/Users/cajoshuapark/flask/client/src/App.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/navbar';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport { useQuery } from '@apollo/client';\nimport { test } from './gql/query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // const [pageDetails, setData] = useState({title: '', pagenum: '', content: ''});\n  const [pageDetails, setData] = useState({\n    bookId: '',\n    pagenum: '',\n    content: ''\n  });\n  const [currPage, setCurrPage] = useState(1); // const { search } = window.location;\n  // const query = new URLSearchParams(search).get('book');\n  // console.log(query);\n\n  _s(useEffect(_s(() => {\n    _s();\n\n    try {\n      const {\n        loading,\n        error,\n        data\n      } = useQuery(test);\n      console.log(data);\n      if (loading) console.log('Loading...');\n      if (error) console.log(`Error! ${error.message}`);\n    } catch (err) {\n      console.log('error', err);\n    }\n  }, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  }), []), \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  }); // body in useEffect will run after page is rendered. \n  // useEffect(() => {\n  //   if(data){\n  //     setData(data[0])\n  //     console.log(data)\n  //   }\n  // }, [])\n  // console.log(pageDetails);\n  // // console.log(query);\n  // useEffect(() => {\n  //   // invalid url will trigger an 404 error\n  //   const { search } = window.location;\n  //   const query = new URLSearchParams(search).get('book');\n  //   fetch(\"/getpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(query)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   )\n  // }, []);\n  // function getNextPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage+1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage + 1);\n  // };\n  // function getPrevPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage-1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage - 1);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        title: pageDetails === null || pageDetails === void 0 ? void 0 : pageDetails.bookId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(App, \"dQQA6bHu1DPcGXeX7JtTenx1qnk=\");\n\n_c = App;\nexport default App; // \n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","BrowserRouter","Router","useQuery","test","App","pageDetails","setData","bookId","pagenum","content","currPage","setCurrPage","loading","error","data","console","log","message","err"],"sources":["/Users/cajoshuapark/flask/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport Page from './components/page';\nimport Navbar from './components/navbar';\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\nimport './App.css';\nimport { useQuery } from '@apollo/client';\nimport { fetchBookIdFromTitle, fetchFirstPage,test } from './gql/query';\n\nconst App = () => {\n  // const [pageDetails, setData] = useState({title: '', pagenum: '', content: ''});\n  const [pageDetails, setData] = useState({bookId: '', pagenum: '', content: ''});\n  const [currPage, setCurrPage] = useState(1);\n  // const { search } = window.location;\n  // const query = new URLSearchParams(search).get('book');\n  // console.log(query);\n\n  useEffect(() => {\n    try {\n      const { loading, error, data }  = useQuery(test);\n      console.log(data);\n      if (loading) console.log('Loading...');\n      if (error) console.log(`Error! ${error.message}`);\n    } catch (err) {\n      console.log('error', err);\n    }\n  }, [])\n\n\n  // body in useEffect will run after page is rendered. \n  // useEffect(() => {\n  //   if(data){\n  //     setData(data[0])\n  //     console.log(data)\n  //   }\n  // }, [])\n  // console.log(pageDetails);\n\n  // // console.log(query);\n  // useEffect(() => {\n  //   // invalid url will trigger an 404 error\n  //   const { search } = window.location;\n  //   const query = new URLSearchParams(search).get('book');\n  //   fetch(\"/getpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(query)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   )\n  // }, []);\n\n  // function getNextPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage+1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage + 1);\n  // };\n  // function getPrevPage() {\n  //   fetch(\"/nextpage\", {\n  //     method:\"POST\",\n  //     headers: {\"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(currPage-1)\n  //   }).then(res => res.json()\n  //   ).then(\n  //     pageDetails => {\n  //       setData(pageDetails)\n  //       // console.log(pageDetails)\n  //     }\n  //   );\n  //   setCurrPage(currPage - 1);\n  // }\n\n  return <Router>\n    {(\n    <div>\n      <Navbar title = {pageDetails?.bookId}/>\n      {/* <h1 className='title'>{data}</h1> */}\n      {/* <Page \n        contents={pageDetails?.content}\n        pagenum = {pageDetails?.pagenum}\n      />\n      <h2 className = \"pagenum\">page: {pageDetails?.pagenum}</h2>\n      <button className = \"circleBackButton\" onClick={getPrevPage}>\n        back page\n      </button>\n      <button className = \"circleForwardButton\" onClick={getNextPage}>\n        next page\n      </button> */}\n\n      {/* <Switch>\n        <Route path=\"/home\">\n          <Search />\n          <h1 className='introText'>SEARCH FOR A BOOK</h1>\n        </Route>\n        <Route path={\"/page\"}>\n          <Page \n            contents={pageDetails?.content}\n            pagenum = {pageDetails?.pagenum}\n          />\n          <h2 className = \"pagenum\">page: {pageDetails?.pagenum}</h2>\n          <button className = \"circleBackButton\" onClick={getPrevPage}>\n            back page\n          </button>\n          <button className = \"circleForwardButton\" onClick={getNextPage}>\n            next page\n          </button>\n        </Route>\n       </Switch> */}\n    </div>\n  )} </Router>\n}\nexport default App;\n\n// "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAA8C,kBAA9C;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAA8CC,IAA9C,QAA0D,aAA1D;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAAA;;EAChB;EACA,MAAM,CAACC,WAAD,EAAcC,OAAd,IAAyBT,QAAQ,CAAC;IAACU,MAAM,EAAE,EAAT;IAAaC,OAAO,EAAE,EAAtB;IAA0BC,OAAO,EAAE;EAAnC,CAAD,CAAvC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,CAAD,CAAxC,CAHgB,CAIhB;EACA;EACA;;EAEA,GAAAC,SAAS,IAAC,MAAM;IAAA;;IACd,IAAI;MACF,MAAM;QAAEc,OAAF;QAAWC,KAAX;QAAkBC;MAAlB,IAA4BZ,QAAQ,CAACC,IAAD,CAA1C;MACAY,OAAO,CAACC,GAAR,CAAYF,IAAZ;MACA,IAAIF,OAAJ,EAAaG,OAAO,CAACC,GAAR,CAAY,YAAZ;MACb,IAAIH,KAAJ,EAAWE,OAAO,CAACC,GAAR,CAAa,UAASH,KAAK,CAACI,OAAQ,EAApC;IACZ,CALD,CAKE,OAAOC,GAAP,EAAY;MACZH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,GAArB;IACD;EACF,CATQ;IAAA,QAE6BhB,QAF7B;EAAA,IASN,EATM,CAAT;IAAA,QAEsCA,QAFtC;EAAA,GARgB,CAoBhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBAAO,QAAC,MAAD;IAAA,wBAEL;MAAA,uBACE,QAAC,MAAD;QAAQ,KAAK,EAAIG,WAAJ,aAAIA,WAAJ,uBAAIA,WAAW,CAAEE;MAA9B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAsCD,CAlHD;;IAAMH,G;;KAAAA,G;AAmHN,eAAeA,GAAf,C,CAEA"},"metadata":{},"sourceType":"module"}